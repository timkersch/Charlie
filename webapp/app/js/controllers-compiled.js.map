{"version":3,"sources":["controllers.js"],"names":[],"mappings":"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","file":"controllers-compiled.js","sourcesContent":["'use strict';\n\nlet charlieController = angular.module('charlieController', [\n    'ngRoute',\n    'charlieService',\n    'ngMaterial'\n]);\n\ncharlieController.controller('mainController', ['$scope', '$routeParams', '$location', '$mdToast', 'charlieProxy', '$mdSidenav',\n    function ($scope, $routeParams, $location, $mdToast, charlieProxy, $mdSidenav) {\n        $scope.user = {};\n        $scope.url = \"\";\n\n        $scope.changeView = function (view) {\n            $location.path(view); // path not hash\n            $scope.toggleLeftMenu();\n        };\n\n        $scope.toggleLeftMenu = function () {\n            $mdSidenav('left').toggle();\n        };\n\n        $scope.isLoggedIn = function () {\n            return charlieProxy.isLoggedIn();\n        };\n\n        let init = function () {\n            if (charlieProxy.isLoggedIn()) {\n                charlieProxy.getUser(function (user) {\n                    $scope.user = user;\n                });\n            } else {\n                if ($routeParams.code) {\n                    charlieProxy.login($routeParams.code, function (user) {\n                        $scope.user = user;\n                        $location.path(\"/\");\n                    });\n                } else {\n                    charlieProxy.getLoginUrl(function (url) {\n                        $scope.url = url;\n                    });\n                }\n            }\n        };\n\n        $scope.$on('$routeChangeSuccess', function () {\n            // Initialize when service is ready\n            charlieProxy.onReady(function () {\n                init();\n            });\n        });\n\n        let showActionToast = function (quiz) {\n            let toast = $mdToast.simple()\n                    .textContent('You have been invited to ' + quiz.name)\n                    .action('ACCEPT')\n                    .highlightAction(true)\n                    .hideDelay(10 * 1000);\n\n            $mdToast.show(toast).then(function (response) {\n                if (response == 'ok') {\n                    charlieProxy.joinQuiz(quiz, function (success) {\n                        if (success) {\n                            $location.path('/lobby');\n                        } else {\n                            alert('Something went wrong joining the quiz!');\n                        }\n                    });\n                }\n            });\n        };\n\n        charlieProxy.listenTo(\"invitedTo\", function (quiz) {\n            showActionToast(quiz);\n        });\n\n        $scope.login = function () {\n            window.location.href = $scope.url;\n        };\n\n        $scope.logout = function () {\n            $scope.user = {};\n            charlieProxy.logout();\n            charlieProxy.getLoginUrl(function (url) {\n                $scope.url = url;\n            });\n        };\n\n    }]);\n\ncharlieController.controller('lobbyController', ['$scope', '$location', 'charlieProxy',\n    function ($scope, $location, charlieProxy) {\n        console.log(\"LobbyController!\");\n        $scope.status = '  ';\n        $scope.quizname = \"Quiz\";\n        $scope.users = [];\n        $scope.isOwner = false;\n\n        let init = function () {\n            charlieProxy.getQuiz(function (quiz) {\n                $scope.quizname = quiz.name;\n                $scope.isOwner = charlieProxy.isQuizOwner();\n                charlieProxy.getUsersInQuiz(function (users) {\n                    $scope.users = users;\n                });\n            });\n        };\n\n        charlieProxy.onReady(function () {\n            init();\n        });\n\n        charlieProxy.listenTo(\"userJoined\", function (user) {\n            console.log(user);\n            $scope.$apply(function () {\n                $scope.users.push(user);\n            });\n        });\n\n        $scope.startQuiz = function () {\n            //$location.path('/question');\n            if (charlieProxy.isQuizOwner())\n                charlieProxy.nextQuestion(function (data) {\n                });\n        };\n\n        charlieProxy.listenTo(\"quizStart\", function () {\n            console.log(\"Now started!!\");\n            $scope.$apply(function () {\n                $location.path('/question');\n            });\n        });\n\n\n    }]);\n\ncharlieController.controller('homeController', ['$scope', '$location', 'charlieProxy',\n    function ($scope, $location, charlieProxy) {\n        $scope.changeView = function (data) {\n            $location.path(data);\n        };\n\n        $scope.isLoggedIn = function () {\n            return charlieProxy.isLoggedIn();\n        };\n\n        console.log(\"Init\");\n    }]);\n\ncharlieController.controller('questionController', ['$scope', '$location', '$interval', 'charlieProxy', '$document', '$timeout',\n    function ($scope, $location, $interval, charlieProxy, $document, $timeout) {\n        console.log(\"Inside questionController\");\n        $scope.timeLeft = 20;\n        $scope.activated = true;\n        $scope.showScores = false;\n        $scope.correctAnswer = \"\";\n        $scope.myAnswer = \"\";\n        $scope.currentQuestion = 1;\n        $scope.lastQuestion = 1;\n        let audioElement = $document[0].createElement('audio');\n        let hasAnswered = false;\n        let intervalPromise;\n        $scope.players = [];\n\n        let play = function (url) {\n            // Stop previous\n            audioElement.pause();\n            audioElement.currentTime = 0;\n            // Play song\n            audioElement.src = url + \".mp3\";\n            audioElement.play();\n        };\n\n        let nextQuestion = function () {\n            charlieProxy.nextQuestion(function (data) {\n            });\n        };\n\n        let init = function () {\n            $scope.lastQuestion = charlieProxy.getNumberOfQuestions();\n            charlieProxy.getResults(function (players) {\n                $scope.players = players;\n            });\n            charlieProxy.getCurrentQuestion(function (question) {\n                if (question.artists) {\n                    if (question.answer !== \"\") {\n                        hasAnswered = true;\n                        $scope.myAnswer = question.answer;\n                        $scope.correctAnswer = question.correct;\n                    }\n                    $scope.currentQuestion = question.number;\n                    $scope.possibleArtists = question.artists;\n                    if (charlieProxy.isQuizOwner())\n                        play(question.track_url);\n                    startInterval();\n                }\n            });\n        };\n\n        charlieProxy.onReady(function () {\n            init();\n        });\n\n        charlieProxy.listenTo(\"gameOver\", function (users) {\n            $location.path(\"/scoreboard\");\n        });\n\n        charlieProxy.listenTo(\"userPointsUpdate\", function (player) {\n            console.log(\"Player: \" + player.name);\n            let found = false;\n            for (let i = 0; i < $scope.players.length; i++) {\n                if ($scope.players[i].name === player.name) {\n                    $scope.players[i].points = player.points;\n                    found = true;\n                    break;\n                }\n            }\n            if (!found)\n                $scope.players.push(player);\n        });\n\n        charlieProxy.listenTo(\"newQuestion\", function (question) {\n            console.log(\"New Question: \" + question);\n            $scope.possibleArtists = question.artists;\n            if (charlieProxy.isQuizOwner())\n                play(question.track_url);\n            $scope.currentQuestion = question.number;\n            $scope.timeLeft = 20;\n            hasAnswered = false;\n            $scope.showScores = false;\n        });\n\n        $scope.isDisabled = function (artist) {\n            return hasAnswered && $scope.myAnswer !== artist;\n        };\n\n        $scope.selectedAnswer = function (data, index) {\n            if (!hasAnswered) {\n                $scope.myAnswer = data;\n                hasAnswered = true;\n                charlieProxy.answerQuestion(data, function (artist) {\n                    console.log(\"Correct answer is: \" + artist);\n                    $scope.correctAnswer = artist;\n                });\n            }\n        };\n\n        $scope.retriveCursor = function () {\n            return hasAnswered ? 'selected' : 'notSelected';\n        };\n\n        $scope.getColor = function (index) {\n            switch (index) {\n                case 0:\n                    return 'green';\n                case 1:\n                    return 'red';\n                case 2:\n                    return 'blue';\n                case 3:\n                    return 'yellow';\n                default:\n                    return 'grey';\n            }\n        };\n\n        $scope.getTextColor = function (index) {\n            switch (index) {\n                case 0:\n                    return 'green-text';\n                case 1:\n                    return 'red-text';\n                case 2:\n                    return 'blue-text';\n                case 3:\n                    return 'yellow-text';\n                default:\n                    return 'grey-text';\n            }\n        };\n\n        let startInterval = function () {\n            if (angular.isDefined(intervalPromise)) {\n                $interval.cancel(intervalPromise);\n                intervalPromise = undefined;\n            }\n            intervalPromise = $interval(function () {\n                if ($scope.timeLeft > 0)\n                    $scope.timeLeft--;\n                if ($scope.timeLeft === 0 && !$scope.showScores) {\n                    if (!hasAnswered) {\n                        $scope.selectedAnswer(\"\", \"\");\n                    }\n                    $scope.showScores = true;\n                    $scope.timeLeft = 5;\n                    // Question over\n                    if (charlieProxy.isQuizOwner()) {\n                        $timeout(function () {\n                            nextQuestion();\n                        }, 5000);\n\n                    }\n                }\n            }, 1000, 0, true);\n        };\n\n        $scope.$on('$destroy', function () {\n            if (angular.isDefined(intervalPromise)) {\n                $interval.cancel(intervalPromise);\n                intervalPromise = undefined;\n            }\n            // Stop previous\n            audioElement.pause();\n            audioElement.currentTime = 0;\n        });\n    }]);\n\ncharlieController.controller('scoreboardController', ['$scope', '$document', '$location', 'charlieProxy',\n    function ($scope, $document, $location, charlieProxy) {\n        console.log(\"Inside scoreboardController\");\n        $scope.scores = [];\n        let canvasChart = $document[0].createElement('canvas');\n        $scope.chart = {\n            values: [],\n            labels: [],\n            colors: [\"#F44336\", \"#9C27B0\", \"#00BCD4\", \"#4CAF50\", \"#FFC107\", \"#795548\"],\n            options: {\n                responsive: false,\n                maintainAspectRatio: false\n            }\n        };\n        $scope.isDisabled = false;\n        $scope.playlistText = \"Save playlist to Spotify\";\n        let chartColors = [\"#80CBC4\", \"#FF8A80\", \"#8C9EFF\", \"#FFEB3B\"];\n        let classColors = ['green-text', 'red-text', 'blue-text', 'yellow-text'];\n\n        let init = function () {\n            canvasChart.id = \"scoreboardChart\";\n            canvasChart.width = \"200\";\n            canvasChart.height = \"200\";\n            canvasChart.style = \"margin-top: 20px;\";\n            let scoreboardCenter = document.getElementById(\"centerScoreboard\");\n            charlieProxy.getResults(function (users) {\n                if (users) {\n                    let data = {\n                        labels: [\"\"],\n                        datasets: []\n                    };\n\n\n                    $scope.scores = [];\n                    $scope.chart.values = [];\n                    $scope.chart.labels = [];\n                    for (let i = 0; i < users.length; i++) {\n                        /*Chart.js need to read data as an array*/\n                        let tmpArray = [users[i].points];\n                        console.log(tmpArray);\n                        data.datasets.push({\n                            fillColor: chartColors[i],\n                            data: tmpArray\n                        });\n                        $scope.scores.push({\n                            value: users[i].points,\n                            userName: users[i].name,\n                            color: classColors[i]\n\n                        });\n\n                    }\n\n                    console.log(data);\n\n                    setTimeout(function () {\n                        scoreboardCenter.insertBefore(canvasChart, scoreboardCenter.firstChild);\n                        let context = canvasChart.getContext(\"2d\");\n                        let scoreboardChart = new Chart(context).Bar(data);\n                        $scope.$apply();\n                    }, 50);\n\n\n                }\n            });\n        };\n\n        // Initialize when service is ready\n        charlieProxy.onReady(function () {\n            init();\n        });\n\n        $scope.changeView = function (view) {\n            $location.path(view); // path not hash\n        };\n\n        $scope.savePlaylist = function () {\n            charlieProxy.savePlaylist();\n            $scope.isDisabled = true;\n            $scope.playlistText = \"Playlist added\";\n        };\n\n        $scope.getTextColor = function (index) {\n            switch (index) {\n                case 0:\n                    return 'green-text';\n                case 1:\n                    return 'red-text';\n                case 2:\n                    return 'blue-text';\n                case 3:\n                    return 'yellow-text';\n                default:\n                    return 'grey-text';\n            }\n        };\n    }]);\n\ncharlieController.controller('profileController', ['$scope', 'charlieProxy',\n    function ($scope, charlieProxy) {\n        console.log(\"Inside profileController\");\n\n        charlieProxy.getUser(function (user) {\n            $scope.user = user;\n            console.log(user);\n        });\n\n    }]);\n\ncharlieController.controller('createController', ['$scope', '$location', 'charlieProxy',\n    function ($scope, $location, charlieProxy) {\n        console.log(\"Inside createController\");\n        $scope.name = null;\n        $scope.nbrOfQuestions = \"\";\n        $scope.playlistSelected = null;\n        $scope.readonly = false;\n        $scope.tags = [];\n        $scope.toggleSwitch = true;\n        $scope.loading = false;\n\n        let init = function () {\n            charlieProxy.getPlaylists(function (lists) {\n                $scope.playlists = lists;\n            });\n        };\n\n        charlieProxy.onReady(function () {\n            init();\n        });\n\n        $scope.submit = function () {\n            $scope.loading = true;\n            charlieProxy.createQuiz($scope.name, $scope.tags, $scope.playlistSelected.id, $scope.playlistSelected.owner, $scope.nbrOfQuestions, $scope.toggleSwitch, function (quiz) {\n                $location.path('/lobby');\n            });\n\n        };\n\n    }]);"]}