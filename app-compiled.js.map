{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["'use strict';\n\nconst express = require('express');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst spotify = require('./core/spotify-service.js');\n\nconst app = express();\nconst http = require('http').Server(app);\nconst io = require('socket.io')(http);\n\napp.use(express.static('webapp'));\n\napp.get('/', function(req, res){\n    res.sendFile(__dirname + '/webapp/index.html');\n});\n\nio.on('connection', function(socket){\n    console.log('user', socket.id, 'connected');\n\n    socket.on('getLoginURL', function(msg) {\n        let obj = {data: spotify.getRedirectURL(), request_id: msg.request_id};\n        socket.emit('callback', obj);\n    });\n\n    socket.on('login', function(msg) {\n        msg.data = 'Tim';\n        socket.emit('callback', msg);\n    });\n\n    socket.on('setUser', function(id, msg) {\n        socket.broadcast.to(id).emit('setUser', msg);\n    });\n\n    socket.on('getPlaylists', function(id, msg) {\n        socket.broadcast.to(id).emit('getPlaylists', msg);\n    });\n\n    socket.on('getCurrentQuestion', function(id, msg) {\n        socket.broadcast.to(id).emit('getCurrentQuestion', msg);\n    });\n\n    socket.on('isQuizStarted', function(id, msg) {\n        socket.broadcast.to(id).emit('isQuizStarted', msg);\n    });\n\n    socket.on('getUsers', function(id, msg) {\n        socket.broadcast.to(id).emit('getUsers', msg);\n    });\n\n    socket.on('getUsersInQuiz', function(id, msg) {\n        socket.broadcast.to(id).emit('getUsersInQuiz', msg);\n    });\n\n    socket.on('logout', function(id, msg) {\n        socket.broadcast.to(id).emit('logout', msg);\n    });\n\n    socket.on('getResults', function(id, msg) {\n        socket.broadcast.to(id).emit('getResults', msg);\n    });\n\n    socket.on('getQuiz', function(id, msg) {\n        socket.broadcast.to(id).emit('getQuiz', msg);\n    });\n\n    socket.on('savePlaylist', function(id, msg) {\n        socket.broadcast.to(id).emit('savePlaylist', msg);\n    });\n\n    socket.on('createQuiz', function(id, msg) {\n        socket.broadcast.to(id).emit('createQuiz', msg);\n    });\n\n    socket.on('getUserResults', function(id, msg) {\n        socket.broadcast.to(id).emit('getUserResults', msg);\n    });\n\n    socket.on('nextQuestion', function(id, msg) {\n        socket.broadcast.to(id).emit('nextQuestion', msg);\n    });\n\n    socket.on('leaveQuiz', function(id, msg) {\n        socket.broadcast.to(id).emit('leaveQuiz', msg);\n    });\n\n    socket.on('joinQuiz', function(id, msg) {\n        socket.broadcast.to(id).emit('joinQuiz', msg);\n    });\n\n    socket.on('answerQuestion', function(id, msg) {\n        socket.broadcast.to(id).emit('answerQuestion', msg);\n    });\n\n\n    socket.on('disconnect', function(){\n        console.log('user', socket.id, 'disconnected');\n        //socket.emit('disconnect', {});\n    });\n});\n\n\nhttp.listen(8080, function(){\n    console.log('listening on *:8080');\n});\n\n// view engine setup\n//app.set('views', path.join(__dirname, 'views'));\n//app.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n//app.use(logger('dev'));\n//app.use(bodyParser.json());\n//app.use(bodyParser.urlencoded({ extended: false }));\n//app.use(cookieParser());\n//app.use(express.static(path.join(__dirname, 'public')));\n//app.use('/', routes);\n\n// // catch 404 and forward to error handler\n// app.use(function(req, res, next) {\n//   var err = new Error('Not Found');\n//   err.status = 404;\n//   next(err);\n// });\n//\n// // error handlers\n//\n// // development error handler\n// // will print stacktrace\n// if (app.get('env') === 'development') {\n//   app.use(function(err, req, res, next) {\n//     res.status(err.status || 500);\n//     //res.render('error', {\n//       //message: err.message,\n//       //error: err\n//     //});\n//   });\n// }\n//\n// // production error handler\n// // no stacktraces leaked to user\n// app.use(function(err, req, res, next) {\n//   res.status(err.status || 500);\n//   //res.render('error', {\n//     //message: err.message,\n//     //error: {}\n//   //});\n// });\n\n\nmodule.exports = app;\n"]}